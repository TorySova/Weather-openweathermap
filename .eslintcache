[{"D:\\IT-incubator\\HomeWork\\my-weather\\src\\reportWebVitals.ts":"1","D:\\IT-incubator\\HomeWork\\my-weather\\src\\App.tsx":"2","D:\\IT-incubator\\HomeWork\\my-weather\\src\\components\\Weather.tsx":"3","D:\\IT-incubator\\HomeWork\\my-weather\\src\\components\\DataWeather.tsx":"4","D:\\IT-incubator\\HomeWork\\my-weather\\src\\redux\\apiWeather.ts":"5","D:\\IT-incubator\\HomeWork\\my-weather\\src\\redux\\weatherReducer.ts":"6","D:\\IT-incubator\\HomeWork\\my-weather\\src\\index.tsx":"7","D:\\IT-incubator\\HomeWork\\my-weather\\src\\redux\\store.ts":"8"},{"size":425,"mtime":1607502605856,"results":"9","hashOfConfig":"10"},{"size":399,"mtime":1611040227813,"results":"11","hashOfConfig":"10"},{"size":2086,"mtime":1621362826914,"results":"12","hashOfConfig":"10"},{"size":1564,"mtime":1621364394705,"results":"13","hashOfConfig":"10"},{"size":388,"mtime":1610913605606,"results":"14","hashOfConfig":"10"},{"size":2845,"mtime":1610999653161,"results":"15","hashOfConfig":"10"},{"size":623,"mtime":1610906936400,"results":"16","hashOfConfig":"10"},{"size":435,"mtime":1610907103069,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"m1yzpm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IT-incubator\\HomeWork\\my-weather\\src\\reportWebVitals.ts",[],["36","37"],"D:\\IT-incubator\\HomeWork\\my-weather\\src\\App.tsx",[],"D:\\IT-incubator\\HomeWork\\my-weather\\src\\components\\Weather.tsx",["38","39"],"import React, { ChangeEvent, useState, KeyboardEvent, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { weatherTC } from '../redux/weatherReducer'\r\nimport { DataWeather } from './DataWeather'\r\nimport s from './Weather.module.css'\r\nimport search from '../common/—Pngtree—search vector icon_4017384.png'\r\nimport pngwing from '../common/pngwing.com.png'\r\n\r\nexport const Weather = () => {\r\n    // const [date, setDate] = useState<Date>();\r\n    // useEffect(() => {\r\n    //     setInterval(() => {\r\n    //         setDate(new Date())\r\n    //     }, 1000)\r\n    // }, [])\r\n\r\n    const dispatch = useDispatch()\r\n    const [searchName, setSearchName] = useState<string>('')\r\n\r\n    const onChangeHendler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchName(e.currentTarget.value)\r\n    }\r\n\r\n    const searchCity = () => {\r\n        dispatch(weatherTC(searchName))\r\n        setSearchName('')\r\n    }\r\n    const onKeyPressHendler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            searchCity()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.searchWrap}>\r\n                <div className={s.logo}>\r\n                    <img src={pngwing} alt=\"logo\"/>\r\n                    <div>your weather</div>\r\n                </div>\r\n\r\n                <div className={s.search}>\r\n                    <input className={s.input} value={searchName} type=\"text\" placeholder={'Введите название города'} onChange={onChangeHendler} onKeyPress={onKeyPressHendler} />\r\n                    <div className={s.button} onClick={searchCity}>\r\n                        <img src={search} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.contentWrap}>\r\n                <DataWeather />\r\n            </div>\r\n            {/* <div>\r\n                <div>{date && date.toLocaleTimeString() }</div>\r\n                <div>{date && date.toLocaleDateString()}</div>\r\n            </div> */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\IT-incubator\\HomeWork\\my-weather\\src\\components\\DataWeather.tsx",[],"D:\\IT-incubator\\HomeWork\\my-weather\\src\\redux\\apiWeather.ts",[],"D:\\IT-incubator\\HomeWork\\my-weather\\src\\redux\\weatherReducer.ts",[],"D:\\IT-incubator\\HomeWork\\my-weather\\src\\index.tsx",[],"D:\\IT-incubator\\HomeWork\\my-weather\\src\\redux\\store.ts",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":55,"nodeType":"46","messageId":"47","endLine":1,"endColumn":64},{"ruleId":"48","severity":1,"message":"49","line":48,"column":25,"nodeType":"50","endLine":48,"endColumn":45},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]